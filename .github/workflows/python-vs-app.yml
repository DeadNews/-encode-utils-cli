name: CI/CD

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  release:
    types: [created]

permissions:
  contents: read

env:
  LD_LIBRARY_PATH: /usr/local/lib
  FORCE_COLOR: 1

jobs:
  ci:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python-version: ["3.10"]
        vapoursynth-version: [R59]
        gcc-version: ["12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install vapoursynth make-deps
        run: |
          sudo apt update
          sudo apt install g++-${{ matrix.gcc-version }}
          sudo apt install ninja-build
          sudo apt install libzimg-dev
          sudo apt install cython3
          pipx install meson

      - name: Install vapoursynth
        run: |
          git clone https://github.com/vapoursynth/vapoursynth --depth 1 -b ${{ matrix.vapoursynth-version }}
          pushd vapoursynth
          ./autogen.sh
          ./configure --disable-x86-asm --disable-vsscript --disable-vspipe
          make -j2
          sudo make install -j2
          popd
          rm -rf vapoursynth

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Check code quality
        run: poetry run poe ci

      - name: Run tests
        run: poetry run pytest --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true

      - name: Generate and Publish docs
        run: |
          git remote add gh-token "git@github.com:DeadNews/encode-utils-cli.git"
          poetry run mkdocs gh-deploy

  build-release:
    name: Build and release
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        run: poetry publish --no-interaction
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
