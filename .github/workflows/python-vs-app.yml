name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

permissions:
  contents: read

jobs:
  ci:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup vapoursynth
        uses: deadnews/setup-vapoursynth@main

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Check code quality
        run: poetry run poe ci

      - name: Run tests
        run: poetry run pytest --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  publish-pypi:
    name: Build and release to PyPI
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ci]
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: |
          pipx install poetry
          pipx inject poetry poetry-dynamic-versioning[plugin]

      - uses: actions/setup-python@v4

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-mkdocs:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup vapoursynth
        uses: deadnews/setup-vapoursynth@main

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Check src files changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'src/**'

      - name: Deploy docs
        if: github.ref == 'refs/heads/main' && steps.changes.outputs.src == 'true'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          poetry run mkdocs gh-deploy --force
